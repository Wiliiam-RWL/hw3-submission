{"ast":null,"code":"/*\n * Copyright 2010-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n\nvar apigClientFactory = {};\napigClientFactory.newClient = function (config) {\n  var apigClient = {};\n  if (config === undefined) {\n    config = {\n      accessKey: '',\n      secretKey: '',\n      sessionToken: '',\n      region: 'us-esat-1',\n      apiKey: undefined,\n      defaultContentType: 'application/json',\n      defaultAcceptType: 'application/json'\n    };\n  }\n  if (config.accessKey === undefined) {\n    config.accessKey = '';\n  }\n  if (config.secretKey === undefined) {\n    config.secretKey = '';\n  }\n  if (config.apiKey === undefined) {\n    config.apiKey = '';\n  }\n  if (config.sessionToken === undefined) {\n    config.sessionToken = '';\n  }\n  if (config.region === undefined) {\n    config.region = 'us-east-1';\n  }\n  //If defaultContentType is not defined then default to application/json\n  if (config.defaultContentType === undefined) {\n    config.defaultContentType = 'application/json';\n  }\n  //If defaultAcceptType is not defined then default to application/json\n  if (config.defaultAcceptType === undefined) {\n    config.defaultAcceptType = 'application/json';\n  }\n\n  // extract endpoint and path from url\n  var invokeUrl = 'https://oy9siziwkf.execute-api.us-east-1.amazonaws.com/test1';\n  var endpoint = /(^https?:\\/\\/[^\\/]+)/g.exec(invokeUrl)[1];\n  var pathComponent = invokeUrl.substring(endpoint.length);\n  var sigV4ClientConfig = {\n    accessKey: config.accessKey,\n    secretKey: config.secretKey,\n    sessionToken: config.sessionToken,\n    serviceName: 'execute-api',\n    region: config.region,\n    endpoint: endpoint,\n    defaultContentType: config.defaultContentType,\n    defaultAcceptType: config.defaultAcceptType\n  };\n  var authType = 'NONE';\n  if (sigV4ClientConfig.accessKey !== undefined && sigV4ClientConfig.accessKey !== '' && sigV4ClientConfig.secretKey !== undefined && sigV4ClientConfig.secretKey !== '') {\n    authType = 'AWS_IAM';\n  }\n  var simpleHttpClientConfig = {\n    endpoint: endpoint,\n    defaultContentType: config.defaultContentType,\n    defaultAcceptType: config.defaultAcceptType\n  };\n  var apiGatewayClient = apiGateway.core.apiGatewayClientFactory.newClient(simpleHttpClientConfig, sigV4ClientConfig);\n  apigClient.photosPut = function (params, body, additionalParams) {\n    if (additionalParams === undefined) {\n      additionalParams = {};\n    }\n    apiGateway.core.utils.assertParametersDefined(params, [], ['body']);\n    var photosPutRequest = {\n      verb: 'put'.toUpperCase(),\n      path: pathComponent + uritemplate('/photos').expand(apiGateway.core.utils.parseParametersToObject(params, [])),\n      headers: apiGateway.core.utils.parseParametersToObject(params, []),\n      queryParams: apiGateway.core.utils.parseParametersToObject(params, []),\n      body: body\n    };\n    return apiGatewayClient.makeRequest(photosPutRequest, authType, additionalParams, config.apiKey);\n  };\n  apigClient.photosOptions = function (params, body, additionalParams) {\n    if (additionalParams === undefined) {\n      additionalParams = {};\n    }\n    apiGateway.core.utils.assertParametersDefined(params, [], ['body']);\n    var photosOptionsRequest = {\n      verb: 'options'.toUpperCase(),\n      path: pathComponent + uritemplate('/photos').expand(apiGateway.core.utils.parseParametersToObject(params, [])),\n      headers: apiGateway.core.utils.parseParametersToObject(params, []),\n      queryParams: apiGateway.core.utils.parseParametersToObject(params, []),\n      body: body\n    };\n    return apiGatewayClient.makeRequest(photosOptionsRequest, authType, additionalParams, config.apiKey);\n  };\n  apigClient.photosFolderItemPut = function (params, body, additionalParams) {\n    if (additionalParams === undefined) {\n      additionalParams = {};\n    }\n    apiGateway.core.utils.assertParametersDefined(params, ['item', 'folder'], ['body']);\n    var photosFolderItemPutRequest = {\n      verb: 'put'.toUpperCase(),\n      path: pathComponent + uritemplate('/photos/{folder}/{item}').expand(apiGateway.core.utils.parseParametersToObject(params, ['item', 'folder'])),\n      headers: apiGateway.core.utils.parseParametersToObject(params, []),\n      queryParams: apiGateway.core.utils.parseParametersToObject(params, []),\n      body: body\n    };\n    return apiGatewayClient.makeRequest(photosFolderItemPutRequest, authType, additionalParams, config.apiKey);\n  };\n  apigClient.photosFolderItemOptions = function (params, body, additionalParams) {\n    if (additionalParams === undefined) {\n      additionalParams = {};\n    }\n    apiGateway.core.utils.assertParametersDefined(params, [], ['body']);\n    var photosFolderItemOptionsRequest = {\n      verb: 'options'.toUpperCase(),\n      path: pathComponent + uritemplate('/photos/{folder}/{item}').expand(apiGateway.core.utils.parseParametersToObject(params, [])),\n      headers: apiGateway.core.utils.parseParametersToObject(params, []),\n      queryParams: apiGateway.core.utils.parseParametersToObject(params, []),\n      body: body\n    };\n    return apiGatewayClient.makeRequest(photosFolderItemOptionsRequest, authType, additionalParams, config.apiKey);\n  };\n  apigClient.searchGet = function (params, body, additionalParams) {\n    if (additionalParams === undefined) {\n      additionalParams = {};\n    }\n    apiGateway.core.utils.assertParametersDefined(params, ['q'], ['body']);\n    var searchGetRequest = {\n      verb: 'get'.toUpperCase(),\n      path: pathComponent + uritemplate('/search').expand(apiGateway.core.utils.parseParametersToObject(params, [])),\n      headers: apiGateway.core.utils.parseParametersToObject(params, []),\n      queryParams: apiGateway.core.utils.parseParametersToObject(params, ['q']),\n      body: body\n    };\n    return apiGatewayClient.makeRequest(searchGetRequest, authType, additionalParams, config.apiKey);\n  };\n  apigClient.searchOptions = function (params, body, additionalParams) {\n    if (additionalParams === undefined) {\n      additionalParams = {};\n    }\n    apiGateway.core.utils.assertParametersDefined(params, [], ['body']);\n    var searchOptionsRequest = {\n      verb: 'options'.toUpperCase(),\n      path: pathComponent + uritemplate('/search').expand(apiGateway.core.utils.parseParametersToObject(params, [])),\n      headers: apiGateway.core.utils.parseParametersToObject(params, []),\n      queryParams: apiGateway.core.utils.parseParametersToObject(params, []),\n      body: body\n    };\n    return apiGatewayClient.makeRequest(searchOptionsRequest, authType, additionalParams, config.apiKey);\n  };\n  return apigClient;\n};\nexport default apigClientFactory;","map":{"version":3,"names":["apigClientFactory","newClient","config","apigClient","undefined","accessKey","secretKey","sessionToken","region","apiKey","defaultContentType","defaultAcceptType","invokeUrl","endpoint","exec","pathComponent","substring","length","sigV4ClientConfig","serviceName","authType","simpleHttpClientConfig","apiGatewayClient","apiGateway","core","apiGatewayClientFactory","photosPut","params","body","additionalParams","utils","assertParametersDefined","photosPutRequest","verb","toUpperCase","path","uritemplate","expand","parseParametersToObject","headers","queryParams","makeRequest","photosOptions","photosOptionsRequest","photosFolderItemPut","photosFolderItemPutRequest","photosFolderItemOptions","photosFolderItemOptionsRequest","searchGet","searchGetRequest","searchOptions","searchOptionsRequest"],"sources":["/Users/weilin/Documents/Spring2024/Cloud/HW3/photobooth/src/lib/apiGateway-js-sdk/apigClient.js"],"sourcesContent":["/*\n * Copyright 2010-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n\nvar apigClientFactory = {};\napigClientFactory.newClient = function (config) {\n    var apigClient = { };\n    if(config === undefined) {\n        config = {\n            accessKey: '',\n            secretKey: '',\n            sessionToken: '',\n            region: 'us-esat-1',\n            apiKey: undefined,\n            defaultContentType: 'application/json',\n            defaultAcceptType: 'application/json'\n        };\n    }\n    if(config.accessKey === undefined) {\n        config.accessKey = '';\n    }\n    if(config.secretKey === undefined) {\n        config.secretKey = '';\n    }\n    if(config.apiKey === undefined) {\n        config.apiKey = '';\n    }\n    if(config.sessionToken === undefined) {\n        config.sessionToken = '';\n    }\n    if(config.region === undefined) {\n        config.region = 'us-east-1';\n    }\n    //If defaultContentType is not defined then default to application/json\n    if(config.defaultContentType === undefined) {\n        config.defaultContentType = 'application/json';\n    }\n    //If defaultAcceptType is not defined then default to application/json\n    if(config.defaultAcceptType === undefined) {\n        config.defaultAcceptType = 'application/json';\n    }\n\n    \n    // extract endpoint and path from url\n    var invokeUrl = 'https://oy9siziwkf.execute-api.us-east-1.amazonaws.com/test1';\n    var endpoint = /(^https?:\\/\\/[^\\/]+)/g.exec(invokeUrl)[1];\n    var pathComponent = invokeUrl.substring(endpoint.length);\n\n    var sigV4ClientConfig = {\n        accessKey: config.accessKey,\n        secretKey: config.secretKey,\n        sessionToken: config.sessionToken,\n        serviceName: 'execute-api',\n        region: config.region,\n        endpoint: endpoint,\n        defaultContentType: config.defaultContentType,\n        defaultAcceptType: config.defaultAcceptType\n    };\n\n    var authType = 'NONE';\n    if (sigV4ClientConfig.accessKey !== undefined && sigV4ClientConfig.accessKey !== '' && sigV4ClientConfig.secretKey !== undefined && sigV4ClientConfig.secretKey !== '') {\n        authType = 'AWS_IAM';\n    }\n\n    var simpleHttpClientConfig = {\n        endpoint: endpoint,\n        defaultContentType: config.defaultContentType,\n        defaultAcceptType: config.defaultAcceptType\n    };\n\n    var apiGatewayClient = apiGateway.core.apiGatewayClientFactory.newClient(simpleHttpClientConfig, sigV4ClientConfig);\n    \n    \n    \n    apigClient.photosPut = function (params, body, additionalParams) {\n        if(additionalParams === undefined) { additionalParams = {}; }\n        \n        apiGateway.core.utils.assertParametersDefined(params, [], ['body']);\n        \n        var photosPutRequest = {\n            verb: 'put'.toUpperCase(),\n            path: pathComponent + uritemplate('/photos').expand(apiGateway.core.utils.parseParametersToObject(params, [])),\n            headers: apiGateway.core.utils.parseParametersToObject(params, []),\n            queryParams: apiGateway.core.utils.parseParametersToObject(params, []),\n            body: body\n        };\n        \n        \n        return apiGatewayClient.makeRequest(photosPutRequest, authType, additionalParams, config.apiKey);\n    };\n    \n    \n    apigClient.photosOptions = function (params, body, additionalParams) {\n        if(additionalParams === undefined) { additionalParams = {}; }\n        \n        apiGateway.core.utils.assertParametersDefined(params, [], ['body']);\n        \n        var photosOptionsRequest = {\n            verb: 'options'.toUpperCase(),\n            path: pathComponent + uritemplate('/photos').expand(apiGateway.core.utils.parseParametersToObject(params, [])),\n            headers: apiGateway.core.utils.parseParametersToObject(params, []),\n            queryParams: apiGateway.core.utils.parseParametersToObject(params, []),\n            body: body\n        };\n        \n        \n        return apiGatewayClient.makeRequest(photosOptionsRequest, authType, additionalParams, config.apiKey);\n    };\n    \n    \n    apigClient.photosFolderItemPut = function (params, body, additionalParams) {\n        if(additionalParams === undefined) { additionalParams = {}; }\n        \n        apiGateway.core.utils.assertParametersDefined(params, ['item', 'folder'], ['body']);\n        \n        var photosFolderItemPutRequest = {\n            verb: 'put'.toUpperCase(),\n            path: pathComponent + uritemplate('/photos/{folder}/{item}').expand(apiGateway.core.utils.parseParametersToObject(params, ['item', 'folder'])),\n            headers: apiGateway.core.utils.parseParametersToObject(params, []),\n            queryParams: apiGateway.core.utils.parseParametersToObject(params, []),\n            body: body\n        };\n        \n        \n        return apiGatewayClient.makeRequest(photosFolderItemPutRequest, authType, additionalParams, config.apiKey);\n    };\n    \n    \n    apigClient.photosFolderItemOptions = function (params, body, additionalParams) {\n        if(additionalParams === undefined) { additionalParams = {}; }\n        \n        apiGateway.core.utils.assertParametersDefined(params, [], ['body']);\n        \n        var photosFolderItemOptionsRequest = {\n            verb: 'options'.toUpperCase(),\n            path: pathComponent + uritemplate('/photos/{folder}/{item}').expand(apiGateway.core.utils.parseParametersToObject(params, [])),\n            headers: apiGateway.core.utils.parseParametersToObject(params, []),\n            queryParams: apiGateway.core.utils.parseParametersToObject(params, []),\n            body: body\n        };\n        \n        \n        return apiGatewayClient.makeRequest(photosFolderItemOptionsRequest, authType, additionalParams, config.apiKey);\n    };\n    \n    \n    apigClient.searchGet = function (params, body, additionalParams) {\n        if(additionalParams === undefined) { additionalParams = {}; }\n        \n        apiGateway.core.utils.assertParametersDefined(params, ['q'], ['body']);\n        \n        var searchGetRequest = {\n            verb: 'get'.toUpperCase(),\n            path: pathComponent + uritemplate('/search').expand(apiGateway.core.utils.parseParametersToObject(params, [])),\n            headers: apiGateway.core.utils.parseParametersToObject(params, []),\n            queryParams: apiGateway.core.utils.parseParametersToObject(params, ['q']),\n            body: body\n        };\n        \n        \n        return apiGatewayClient.makeRequest(searchGetRequest, authType, additionalParams, config.apiKey);\n    };\n    \n    \n    apigClient.searchOptions = function (params, body, additionalParams) {\n        if(additionalParams === undefined) { additionalParams = {}; }\n        \n        apiGateway.core.utils.assertParametersDefined(params, [], ['body']);\n        \n        var searchOptionsRequest = {\n            verb: 'options'.toUpperCase(),\n            path: pathComponent + uritemplate('/search').expand(apiGateway.core.utils.parseParametersToObject(params, [])),\n            headers: apiGateway.core.utils.parseParametersToObject(params, []),\n            queryParams: apiGateway.core.utils.parseParametersToObject(params, []),\n            body: body\n        };\n        \n        \n        return apiGatewayClient.makeRequest(searchOptionsRequest, authType, additionalParams, config.apiKey);\n    };\n    \n\n    return apigClient;\n};\n\nexport default apigClientFactory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}