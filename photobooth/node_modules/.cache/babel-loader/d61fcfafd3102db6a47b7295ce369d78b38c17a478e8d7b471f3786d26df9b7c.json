{"ast":null,"code":"import{ImageList,ImageListItem}from\"@mui/material\";import React from\"react\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Images(_ref){let{images}=_ref;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(ImageList,{sx:{width:500,height:450},variant:\"woven\",cols:3,gap:8,children:images.map(item=>/*#__PURE__*/_jsx(ImageListItem,{children:/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(item),alt:\"No Image\",loading:\"lazy\"})},item.toString()))})});}","map":{"version":3,"names":["ImageList","ImageListItem","React","jsx","_jsx","Fragment","_Fragment","Images","_ref","images","children","sx","width","height","variant","cols","gap","map","item","src","concat","alt","loading","toString"],"sources":["/Users/weilin/Documents/Spring2024/Cloud/HW3/photobooth/src/components/Images.tsx"],"sourcesContent":["import { ImageList, ImageListItem } from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n  images: String[];\n}\n\nexport default function Images({ images }: Props) {\n  return (\n    <>\n      <ImageList\n        sx={{ width: 500, height: 450 }}\n        variant=\"woven\"\n        cols={3}\n        gap={8}\n      >\n        {images.map((item) => (\n          <ImageListItem key={item.toString()}>\n            <img src={`${item}`} alt={\"No Image\"} loading=\"lazy\" />\n          </ImageListItem>\n        ))}\n      </ImageList>\n    </>\n  );\n}\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,aAAa,KAAQ,eAAe,CACxD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAM1B,cAAe,SAAS,CAAAC,MAAMA,CAAAC,IAAA,CAAoB,IAAnB,CAAEC,MAAc,CAAC,CAAAD,IAAA,CAC9C,mBACEJ,IAAA,CAAAE,SAAA,EAAAI,QAAA,cACEN,IAAA,CAACJ,SAAS,EACRW,EAAE,CAAE,CAAEC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,GAAI,CAAE,CAChCC,OAAO,CAAC,OAAO,CACfC,IAAI,CAAE,CAAE,CACRC,GAAG,CAAE,CAAE,CAAAN,QAAA,CAEND,MAAM,CAACQ,GAAG,CAAEC,IAAI,eACfd,IAAA,CAACH,aAAa,EAAAS,QAAA,cACZN,IAAA,QAAKe,GAAG,IAAAC,MAAA,CAAKF,IAAI,CAAG,CAACG,GAAG,CAAE,UAAW,CAACC,OAAO,CAAC,MAAM,CAAE,CAAC,EADrCJ,IAAI,CAACK,QAAQ,CAAC,CAEnB,CAChB,CAAC,CACO,CAAC,CACZ,CAAC,CAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}